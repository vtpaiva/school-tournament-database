CREATE TYPE ALTURA_MODALIDADE AS ENUM ('MUITO BAIXO', 'BAIXO', 'MEDIO-BAIXO', 'MEDIO', 'ALTO', 'QUALQUER');
CREATE TYPE PESO_MODALIDADE AS ENUM ('MUITO LEVE', 'LEVE', 'MEDIO', 'PESADO', 'MUITO PESADO', 'EXTREMAMENTE PESADO', 'QUALQUER');
CREATE TYPE ALTURA_ESTUDANTE AS ENUM ('MUITO BAIXO', 'BAIXO', 'MEDIO-BAIXO', 'MEDIO', 'ALTO');
CREATE TYPE PESO_ESTUDANTE AS ENUM ('MUITO LEVE', 'LEVE', 'MEDIO', 'PESADO', 'MUITO PESADO', 'EXTREMAMENTE PESADO');
CREATE TYPE CATEGORIA_FASES AS ENUM ('GRUPOS', 'OITAVAS', 'QUARTAS', 'SEMIFINAL', 'FINAL');
CREATE TYPE CATEGORIA_ETAPAS AS ENUM ('SUBREGIONAL', 'REGIONAL', 'ESTADUAL');
CREATE TYPE CATEGORIA_DEFICIENCIAS AS ENUM ('VISUAL', 'MOTORA', 'INTELECTUAL', 'NENHUMA');
CREATE TYPE RESULTADO_JOGO AS ENUM ('V', 'D', 'E', 'P');
CREATE TYPE RESULTADO_PREMIO_INDIVIDUAL AS ENUM ('V', 'D', 'P');
CREATE TYPE FUNCOES_PESSOA AS ENUM ('E', 'P', 'A');
CREATE TYPE REGRAS_COLOCACAO AS ENUM ('PONTOS', 'PLAYOFFS', 'UNICO');

CREATE TABLE Modalidade (
    ID SERIAL PRIMARY KEY,
    ESPORTE VARCHAR(16) NOT NULL,
    SEXO CHAR(1) NOT NULL,
    IDADE_MINIMA NUMERIC(2, 0) NOT NULL,
    IDADE_MAXIMA NUMERIC(2, 0) NOT NULL,
    ALTURA ALTURA_MODALIDADE NOT NULL DEFAULT 'QUALQUER',
    PESO PESO_MODALIDADE NOT NULL DEFAULT 'QUALQUER',
    TIPO_DEFICIENCIA CATEGORIA_DEFICIENCIAS NOT NULL DEFAULT 'NENHUMA',
    TITULARES NUMERIC(2, 0) NOT NULL,
    RESERVAS NUMERIC(2, 0) NOT NULL DEFAULT 0,
    REGRA_PONTUACAO VARCHAR(16) NOT NULL,

    CONSTRAINT SK_MODALIDADE UNIQUE (ESPORTE, SEXO, IDADE_MINIMA, IDADE_MAXIMA, ALTURA, PESO, TIPO_DEFICIENCIA),
    CONSTRAINT CK_MODALIDADE_IDADE CHECK (
        IDADE_MINIMA > 0 AND 
        IDADE_MAXIMA > 0 AND
        IDADE_MAXIMA >= IDADE_MINIMA
    ),
    CONSTRAINT CK_MODALIDADE_JOGADORES CHECK (
        TITULARES > 0 AND 
        RESERVAS >= 0
    ),
    CONSTRAINT CK_MODALIDADE_PONTUACAO CHECK (
        REGRA_PONTUACAO SIMILAR TO 'V[0-9]+E[0-9]+D[0-9]+'
    )
);

CREATE TABLE Modalidade_desportiva(
    ID INT PRIMARY KEY,

    CONSTRAINT FK_MODALIDADE FOREIGN KEY(ID)
    REFERENCES Modalidade(ID)
    ON DELETE CASCADE
);

CREATE TABLE Modalidade_paradesportiva(
    ID INT PRIMARY KEY,

    CONSTRAINT FK_MODALIDADE FOREIGN KEY(ID)
    REFERENCES Modalidade(ID)
    ON DELETE CASCADE
);

CREATE TABLE Adaptacoes (
    ID_MODALIDADE INT,
    ADAPTACAO VARCHAR(16),

    CONSTRAINT PK_ADAPTACOES PRIMARY KEY(ID_MODALIDADE, ADAPTACAO),
    CONSTRAINT FK_PARADESPORTIVA FOREIGN KEY(ID_MODALIDADE)
    REFERENCES Modalidade_paradesportiva(ID)
);

CREATE TABLE Medidas_oficiais (
    ID_MODALIDADE INT,
    EQUIPAMENTO_CIRCUITO VARCHAR(32),
    MEDIDA NUMERIC(5, 2) NOT NULL,

    CONSTRAINT PK_MEDIDAS_OFICIAIS PRIMARY KEY(ID_MODALIDADE, EQUIPAMENTO_CIRCUITO),
    CONSTRAINT FK_PARADESPORTIVA FOREIGN KEY(ID_MODALIDADE)
    REFERENCES Modalidade_desportiva(ID),
    CONSTRAINT CK_MEDIDAS_OFICIAIS CHECK (MEDIDA >= 0)
);

CREATE TABLE Funcoes (
    CPF CHAR(11) PRIMARY KEY,
    FUNCAO FUNCOES_PESSOA NOT NULL
);

CREATE TABLE Estudante (
    CPF CHAR(11) PRIMARY KEY,
    NOME VARCHAR(32),
    ALTURA ALTURA_ESTUDANTE NOT NULL,
    PESO PESO_ESTUDANTE NOT NULL,
    SEXO CHAR(1) NOT NULL,
    IDADE NUMERIC(2, 0) NOT NULL,
    TIPO_DEFICIENCIA CATEGORIA_DEFICIENCIAS NOT NULL DEFAULT 'NENHUMA',

    CONSTRAINT FK_CPF FOREIGN KEY(CPF)
    REFERENCES Funcoes(CPF)
    ON DELETE CASCADE,
    CONSTRAINT CK_ESTUDANTE_IDADE CHECK (
        IDADE > 0
    )
);

CREATE TABLE Professor (
    CPF CHAR(11) PRIMARY KEY,
    NOME VARCHAR(32),
    DISCIPLINA VARCHAR(16),

    CONSTRAINT FK_CPF FOREIGN KEY(CPF)
    REFERENCES Funcoes(CPF)
    ON DELETE CASCADE
);

CREATE TABLE Arbitro (
    CPF CHAR(11) PRIMARY KEY,
    NOME VARCHAR(32),
    CIDADE VARCHAR(32) NOT NULL,

    CONSTRAINT FK_CPF FOREIGN KEY(CPF)
    REFERENCES Funcoes(CPF)
    ON DELETE CASCADE
);

CREATE TABLE Escola (
    ANO NUMERIC(4, 0),
    CODIGO_INEP_MEC CHAR(8),
    CIDADE VARCHAR(32) NOT NULL,
    PONTUACAO_GERAL NUMERIC(3, 0) NOT NULL DEFAULT 0,

    CONSTRAINT PK_ESCOLA PRIMARY KEY (ANO, CODIGO_INEP_MEC),
    CONSTRAINT CK_ESCOLA CHECK (PONTUACAO_GERAL >= 0)
);

CREATE TABLE Local (
    CIDADE VARCHAR(32),
    BAIRRO VARCHAR(32),
    RUA VARCHAR(32),
    NUMERO SMALLINT,
    CAPACIDADE SMALLINT,

    CONSTRAINT PK_LOCAL PRIMARY KEY(CIDADE, BAIRRO, RUA, NUMERO),
    CONSTRAINT CK_LOCAL CHECK (
        NUMERO > 0 AND
        CAPACIDADE > 0
    )
);

CREATE TABLE Competicao (
    ID SERIAL PRIMARY KEY,
    ID_MODALIDADE INT NOT NULL,
    ANO NUMERIC(4, 0) NOT NULL, 
    ETAPA CATEGORIA_ETAPAS NOT NULL,
    PREMIACAO SMALLINT DEFAULT 0,
    REGRA_COLOCACAO REGRAS_COLOCACAO NOT NULL,
    FINALIZADA BOOLEAN NOT NULL DEFAULT FALSE,
    
    CONSTRAINT SK_COMPETICAO UNIQUE(ID_MODALIDADE, ANO, ETAPA),
    CONSTRAINT FK_MODALIDADE FOREIGN KEY(ID_MODALIDADE) 
    REFERENCES Modalidade(ID),
    CONSTRAINT CK_COMPETICAO_ANO CHECK (
        ANO > 0
    ), 
    CONSTRAINT CK_COMPETICAO_PREMIACAO CHECK (
        PREMIACAO >= 0
    )
);

CREATE TABLE Jogo (
    ID SERIAL PRIMARY KEY,
    DATA_JOGO DATE NOT NULL,
    HORARIO TIME NOT NULL,
    CIDADE VARCHAR(32) NOT NULL,
    BAIRRO VARCHAR(32) NOT NULL,
    RUA VARCHAR(32) NOT NULL,
    NUMERO SMALLINT NOT NULL,
    ID_COMPETICAO INT NOT NULL, 
    ARBITRO CHAR(11) NOT NULL,
    FASE CATEGORIA_FASES NOT NULL,
    TEMPO_DE_JOGO TIME,
    PUBLICO SMALLINT,

    CONSTRAINT SK_JOGO UNIQUE(DATA_JOGO, HORARIO, CIDADE, BAIRRO, RUA, NUMERO),
    CONSTRAINT FK_LOCAL FOREIGN KEY(CIDADE, BAIRRO, RUA, NUMERO)
    REFERENCES Local(CIDADE, BAIRRO, RUA, NUMERO),
    CONSTRAINT SK_ARBITRO FOREIGN KEY(ARBITRO)
    REFERENCES Arbitro(CPF),
    CONSTRAINT CK_JOGO_PUBLICO CHECK (
        PUBLICO >= 0
    )
);

CREATE TABLE Equipe (
    ID SERIAL PRIMARY KEY,
    ID_MODALIDADE INT NOT NULL,
    ANO NUMERIC(4, 0) NOT NULL,
    CODIGO_INEP_MEC char(8) NOT NULL,
    NOME VARCHAR(16),

    CONSTRAINT SK_EQUIPE UNIQUE(ID_MODALIDADE, ANO, CODIGO_INEP_MEC),
    CONSTRAINT FK_MODALIDADE FOREIGN KEY(ID_MODALIDADE)
    REFERENCES Modalidade(ID),
    CONSTRAINT FK_ESCOLA FOREIGN KEY(ANO, CODIGO_INEP_MEC)
    REFERENCES Escola(ANO, CODIGO_INEP_MEC),
    CONSTRAINT CK_EQUIPE CHECK (
        ANO > 0
    )
);

CREATE TABLE Participacao (
    ID_EQUIPE INT,
    ESTUDANTE CHAR(11),

    CONSTRAINT PK_PARTICIPACAO PRIMARY KEY(ID_EQUIPE, ESTUDANTE),
    CONSTRAINT FK_EQUIPE FOREIGN KEY(ID_EQUIPE)
    REFERENCES Equipe(ID),
    CONSTRAINT FK_ESTUDANTE FOREIGN KEY(ESTUDANTE)
    REFERENCES Estudante(CPF)
);

CREATE TABLE Disputa (
    ID_EQUIPE INT,
    ID_JOGO INT,
    RESULTADO RESULTADO_JOGO NOT NULL DEFAULT 'P',

    CONSTRAINT PK_DISPUTA PRIMARY KEY(ID_EQUIPE, ID_JOGO),
    CONSTRAINT FK_EQUIPE FOREIGN KEY(ID_EQUIPE)
    REFERENCES Equipe(ID),
    CONSTRAINT FK_JOGO FOREIGN KEY(ID_JOGO)
    REFERENCES Jogo(ID)
);

CREATE TABLE Estatisticas (
    ID_EQUIPE INT,
    ESTUDANTE CHAR(11),
    CRITERIO VARCHAR(16),
    VALOR SMALLINT NOT NULL DEFAULT 0,

    CONSTRAINT PK_ESTATISTICAS PRIMARY KEY(ID_EQUIPE, ESTUDANTE, CRITERIO),
    CONSTRAINT FK_PARTICIPACAO FOREIGN KEY(ID_EQUIPE, ESTUDANTE)
    REFERENCES Participacao(ID_EQUIPE, ESTUDANTE),
    CONSTRAINT CK_ESTATISTICAS CHECK (
        VALOR >= 0
    )
);

CREATE TABLE Premio_individual (
    ID_COMPETICAO INT,
    CRITERIO VARCHAR(16),
    REGRA_COLOCACAO VARCHAR(16) NOT NULL,
    PREMIACAO SMALLINT DEFAULT 0,
    
    CONSTRAINT PK_PREMIO_INDIVIDUAL PRIMARY KEY(ID_COMPETICAO, CRITERIO),
    CONSTRAINT FK_COMPETICAO FOREIGN KEY(ID_COMPETICAO)
    REFERENCES Competicao(ID),
    CONSTRAINT CK_PREMIO_INDIVIDUAL CHECK (
        PREMIACAO >= 0
    )
);

CREATE TABLE Concorre (
    ID_EQUIPE INT,
    ESTUDANTE CHAR(11),
    ID_COMPETICAO INT,
    CRITERIO CHAR(1),
    RESULTADO RESULTADO_PREMIO_INDIVIDUAL NOT NULL DEFAULT 'P',

    CONSTRAINT PK_CONCORRE PRIMARY KEY(ID_EQUIPE, ESTUDANTE, ID_COMPETICAO, CRITERIO),
    CONSTRAINT FK_PARTICIPACAO FOREIGN KEY(ID_EQUIPE, ESTUDANTE)
    REFERENCES Participacao(ID_EQUIPE, ESTUDANTE),
    CONSTRAINT FK_PREMIO_INDIVIDUAL FOREIGN KEY(ID_COMPETICAO, CRITERIO)
    REFERENCES Premio_individual(ID_COMPETICAO, CRITERIO),
    CONSTRAINT CK_CONCORRE CHECK (
        CRITERIO IN ('+', '-')
    )
);

CREATE TABLE Participa (
    ID_COMPETICAO INT,
    ID_EQUIPE INT,
    COLOCACAO SMALLINT,
    PONTUACAO NUMERIC(3, 0) NOT NULL DEFAULT 0,

    CONSTRAINT PK_PARTICIPA PRIMARY KEY(ID_COMPETICAO, ID_EQUIPE),
    CONSTRAINT SK_PARTICIPA UNIQUE(ID_COMPETICAO, COLOCACAO),
    CONSTRAINT FK_COMPETICAO FOREIGN KEY(ID_COMPETICAO)
    REFERENCES Competicao(ID),
    CONSTRAINT FK_EQUIPE FOREIGN KEY(ID_EQUIPE)
    REFERENCES Equipe(ID),
    CONSTRAINT CK_PARTICIPA CHECK (
        COLOCACAO > 0 AND
        PONTUACAO >= 0
    )
);

CREATE TABLE Patrocinios (
    ID_EQUIPE INT,
    PATROCINIO VARCHAR(32),

    CONSTRAINT PK_PATROCINIOS PRIMARY KEY(ID_EQUIPE, PATROCINIO),
    CONSTRAINT FK_EQUIPE FOREIGN KEY(ID_EQUIPE)
    REFERENCES Equipe(ID)
);

CREATE TABLE Coordena (
    PROFESSOR CHAR(11),
    ID_EQUIPE INT,

    CONSTRAINT PK_COORDENA PRIMARY KEY(PROFESSOR, ID_EQUIPE),
    CONSTRAINT FK_PROFESSOR FOREIGN KEY(PROFESSOR)
    REFERENCES Professor(CPF),
    CONSTRAINT FK_EQUIPE FOREIGN KEY(ID_EQUIPE)
    REFERENCES Equipe(ID)
);