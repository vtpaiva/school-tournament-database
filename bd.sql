CREATE TABLE Modalidade (
    ID SERIAL PRIMARY KEY,
    ESPORTE VARCHAR(16) NOT NULL,
    SEXO CHAR(1) NOT NULL,
    IDADE_MINIMA NUMERIC(2, 0) NOT NULL,
    IDADE_MAXIMA NUMERIC(2, 0) NOT NULL,
    ALTURA VARCHAR(11) NOT NULL DEFAULT 'Qualquer',
    PESO VARCHAR(19) NOT NULL DEFAULT 'Qualquer',
    TIPO_DEFICIENCIA TEXT NOT NULL DEFAULT 'Nenhuma',
    TITULARES NUMERIC(2, 0) NOT NULL,
    RESERVAS NUMERIC(2, 0) NOT NULL DEFAULT 0,
    REGRA_PONTUACAO VARCHAR(16) NOT NULL,

    CONSTRAINT SK_MODALIDADE UNIQUE (ESPORTE, SEXO, IDADE_MINIMA, IDADE_MAXIMA, ALTURA, PESO, TIPO_DEFICIENCIA),
    CONSTRAINT CK_MODALIDADE_IDADE CHECK (
        IDADE_MINIMA > 0 AND 
        IDADE_MAXIMA > 0 AND
        IDADE_MAXIMA >= IDADE_MINIMA
    )
    CONSTRAINT CK_MODALIDADE_ALTURA CHECK (
        ALTURA > 0 
    )
    CONSTRAINT CK_MODALIDADE_PESO CHECK (
        PESO > 0 
    )
    CONSTRAINT CK_MODALIDADE_JOGADORES CHECK (
        TITULARES > 0 AND 
        RESERVAS >= 0
    )
);

CREATE TABLE Modalidade_desportiva(
    ID INT PRIMARY KEY,

    CONSTRAINT FK_MODALIDADE FOREIGN KEY(ID)
    REFERENCES Modalidade(ID)
    ON DELETE CASCADE
);

CREATE TABLE Modalidade_paradesportiva(
    ID INT PRIMARY KEY,

    CONSTRAINT FK_MODALIDADE FOREIGN KEY(ID)
    REFERENCES Modalidade(ID)
    ON DELETE CASCADE
);

CREATE TABLE Adaptacoes (
    ID_MODALIDADE INT,
    ADAPTACAO VARCHAR(16),

    CONSTRAINT PK_ADAPTACOES PRIMARY KEY(ID_MODALIDADE, ADAPTACAO),
    CONSTRAINT FK_PARADESPORTIVA FOREIGN KEY(ID_MODALIDADE)
    REFERENCES Modalidade_paradesportiva(ID)
);

CREATE TABLE Medidas_oficiais (
    ID_MODALIDADE INT,
    EQUIPAMENTO_CIRCUITO VARCHAR(16),
    MEDIDA NUMERIC(2, 2) NOT NULL,

    CONSTRAINT PK_MEDIDAS_OFICIAIS PRIMARY KEY(ID_MODALIDADE, EQUIPAMENTO_CIRCUITO),
    CONSTRAINT FK_PARADESPORTIVA FOREIGN KEY(ID_MODALIDADE)
    REFERENCES Modalidade_desportiva(ID),
    CONSTRAINT CK_MEDIDAS_OFICIAIS CHECK (MEDIDA >= 0)
);

CREATE TABLE Funcoes (
    CPF CHAR(11) PRIMARY KEY,
    FUNCAO CHAR(1) NOT NULL
);

CREATE TABLE Estudante (
    CPF CHAR(11) PRIMARY KEY,
    NOME TEXT,
    ALTURA VARCHAR(11) NOT NULL DEFAULT 'Qualquer',
    PESO VARCHAR(19) NOT NULL DEFAULT 'Qualquer',
    SEXO CHAR(1) NOT NULL,
    IDADE NUMERIC(2, 0) NOT NULL,
    TIPO_DEFICIENCIA VARCHAR(16) NOT NULL DEFAULT 'Nenhuma',

    CONSTRAINT FK_CPF FOREIGN KEY(CPF)
    REFERENCES Funcoes(CPF)
    ON DELETE CASCADE,
    CONSTRAINT CK_ESTUDANTE CHECK (
        ALTURA > 0 AND
        PESO > 0 AND
        IDADE > 0
    )
);

CREATE TABLE Professor (
    CPF CHAR(11) PRIMARY KEY,
    NOME TEXT,
    DISCIPLINA TEXT,

    CONSTRAINT FK_CPF FOREIGN KEY(CPF)
    REFERENCES Funcoes(CPF)
    ON DELETE CASCADE
);

CREATE TABLE Arbitro (
    CPF CHAR(11) PRIMARY KEY,
    NOME TEXT,
    CIDADE TEXT NOT NULL,

    CONSTRAINT FK_CPF FOREIGN KEY(CPF)
    REFERENCES Funcoes(CPF)
    ON DELETE CASCADE
);

CREATE TABLE Escola (
    ANO NUMERIC(4, 0),
    CODIGO_INEP_MEC CHAR(8),
    CIDADE TEXT NOT NULL,
    PONTUACAO_GERAL NUMERIC(3, 0) NOT NULL DEFAULT 0,

    CONSTRAINT PK_ESCOLA PRIMARY KEY (ANO, CODIGO_INEP_MEC),
    CONSTRAINT CK_ESCOLA CHECK (PONTUACAO_GERAL >= 0)
);

CREATE TABLE Local (
    CIDADE TEXT,
    BAIRRO TEXT,
    RUA TEXT,
    NUMERO SMALLINT,
    CAPACIDADE SMALLINT,

    CONSTRAINT PK_LOCAL PRIMARY KEY(CIDADE, BAIRRO, RUA, NUMERO),
    CONSTRAINT CK_LOCAL CHECK (
        NUMERO > 0 AND
        CAPACIDADE > 0
    )
);

CREATE TABLE Jogo (
    ID SERIAL PRIMARY KEY,
    DATA_JOGO DATE NOT NULL,
    HORARIO TIME NOT NULL,
    CIDADE TEXT NOT NULL,
    BAIRRO TEXT NOT NULL,
    RUA TEXT NOT NULL,
    NUMERO SMALLINT NOT NULL,
    ID_COMPETICAO INT NOT NULL, 
    ARBITRO CHAR(11) NOT NULL,
    FASE VARCHAR(16) NOT NULL,
    TEMPO_DE_JOGO TIME,
    PUBLICO SMALLINT,

    CONSTRAINT SK_JOGO UNIQUE(DATA_JOGO, HORARIO, CIDADE, BAIRRO, RUA, NUMERO),
    CONSTRAINT FK_LOCAL FOREIGN KEY(CIDADE, BAIRRO, RUA, NUMERO)
    REFERENCES Local(CIDADE, BAIRRO, RUA, NUMERO),
    CONSTRAINT SK_ARBITRO FOREIGN KEY(ARBITRO)
    REFERENCES Arbitro(CPF)
    CONSTRAINT CK_JOGO CHECK (
        NUMERO > 0 AND
        PUBLICO > 0 AND
        FASE IN ('GRUPOS', 'OITAVAS', 'QUARTAS', 'SEMIFINAL', 'FINAL')
    )
);

CREATE TABLE Competicao (
    ID SERIAL PRIMARY KEY,
    ID_MODALIDADE INT NOT NULL,
    ANO NUMERIC(4, 0) NOT NULL, 
    ETAPA VARCHAR(11) NOT NULL,
    PREMIACAO SMALLINT DEFAULT 0,
    REGRA_COLOCACAO VARCHAR(16) NOT NULL,
    FINALIZADA BIT(1) NOT NULL DEFAULT '0'::bit,
    
    CONSTRAINT SK_COMPETICAO UNIQUE(ID_MODALIDADE, ANO, ETAPA),
    CONSTRAINT FK_MODALIDADE FOREIGN KEY(ID_MODALIDADE) 
    REFERENCES Modalidade(ID),
    CONSTRAINT CK_COMPETICAO CHECK (
        ANO > 0 AND
        UPPER(ETAPA) IN ('SUBREGIONAL', 'REGIONAL', 'ESTADUAL') AND
        PREMIACAO >= 0
    )
);

CREATE TABLE Equipe (
    ID SERIAL PRIMARY KEY,
    ID_MODALIDADE INT NOT NULL,
    ANO NUMERIC(4, 0) NOT NULL,
    CODIGO_INEP_MEC char(8) NOT NULL,
    NOME TEXT,

    CONSTRAINT SK_EQUIPE UNIQUE(ID_MODALIDADE, ANO, CODIGO_INEP_MEC),
    CONSTRAINT FK_MODALIDADE FOREIGN KEY(ID_MODALIDADE)
    REFERENCES Modalidade(ID),
    CONSTRAINT FK_ESCOLA FOREIGN KEY(ANO, CODIGO_INEP_MEC)
    REFERENCES Escola(ANO, CODIGO_INEP_MEC),
    CONSTRAINT CK_EQUIPE CHECK (
        ANO > 0
    )
);

CREATE TABLE Participacao (
    ID_EQUIPE INT,
    ESTUDANTE CHAR(11),

    CONSTRAINT PK_PARTICIPACAO PRIMARY KEY(ID_EQUIPE, ESTUDANTE),
    CONSTRAINT FK_EQUIPE FOREIGN KEY(ID_EQUIPE)
    REFERENCES Equipe(ID),
    CONSTRAINT FK_ESTUDANTE FOREIGN KEY(ESTUDANTE)
    REFERENCES Estudante(CPF)
);

CREATE TABLE Disputa (
    ID_EQUIPE INT,
    ID_JOGO INT,
    RESULTADO CHAR(1) NOT NULL DEFAULT "P",

    CONSTRAINT PK_DISPUTA PRIMARY KEY(ID_EQUIPE, ID_JOGO),
    CONSTRAINT FK_EQUIPE FOREIGN KEY(ID_EQUIPE)
    REFERENCES Equipe(ID),
    CONSTRAINT FK_JOGO FOREIGN KEY(ID_JOGO)
    REFERENCES Jogo(ID),
    CONSTRAINT CK_DISPUTA CHECK (
        RESULTADO IN ('V', 'D', 'E', 'P')
    )
);

CREATE TABLE Estatisticas (
    ID_EQUIPE INT,
    ESTUDANTE CHAR(11),
    CRITERIO VARCHAR(16),
    VALOR SMALLINT NOT NULL DEFAULT 0,

    CONSTRAINT PK_ESTATISTICAS PRIMARY KEY(ID_EQUIPE, ESTUDANTE, CRITERIO),
    CONSTRAINT FK_PARTICIPACAO FOREIGN KEY(ID_EQUIPE, ESTUDANTE)
    REFERENCES Participacao(ID_EQUIPE, ESTUDANTE),
    CHECK CK_ESTATISTICAS CHECK (
        VALOR >= 0
    )
);

CREATE TABLE Premio_individual (
    ID_COMPETICAO INT,
    CRITERIO VARCHAR(16),
    REGRA_COLOCACAO VARCHAR(16) NOT NULL,
    PREMIACAO SMALLINT DEFAULT 0,
    
    CONSTRAINT PK_PREMIO_INDIVIDUAL PRIMARY KEY(ID_COMPETICAO, CRITERIO),
    CONSTRAINT FK_COMPETICAO FOREIGN KEY(ID_COMPETICAO)
    REFERENCES Competicao(ID),
    CONSTRAINT CK_PREMIO_INDIVIDUAL CHECK (
        PREMIACAO >= 0
    )
);

CREATE TABLE Concorre (
    ID_EQUIPE INT,
    ESTUDANTE CHAR(11),
    ID_COMPETICAO INT,
    CRITERIO CHAR(1),
    RESULTADO CHAR(1) NOT NULL DEFAULT "P",

    CONSTRAINT PK_CONCORRE PRIMARY KEY(ID_EQUIPE, ESTUDANTE, ID_COMPETICAO, CRITERIO),
    CONSTRAINT FK_PARTICIPACAO FOREIGN KEY(ID_EQUIPE, ESTUDANTE)
    REFERENCES Participacao(ID_EQUIPE, ESTUDANTE),
    CONSTRAINT FK_PREMIO_INDIVIDUAL FOREIGN KEY(ID_COMPETICAO, CRITERIO)
    REFERENCES Premio_individual(ID_COMPETICAO, CRITERIO),
    CONSTRAINT CK_CONCORRE CHECK (
        CRITERIO IN ('+', '-') AND
        RESULTADO IN ('V', 'D', 'P')
    )
);

CREATE TABLE Participa (
    ID_COMPETICAO INT,
    ID_EQUIPE INT,
    COLOCACAO SMALLINT,
    PONTUACAO NUMERIC(3, 0) NOT NULL DEFAULT 0,

    CONSTRAINT PK_PARTICIPA PRIMARY KEY(ID_COMPETICAO, ID_EQUIPE),
    CONSTRAINT SK_PARTICIPA UNIQUE(ID_COMPETICAO, COLOCACAO),
    CONSTRAINT FK_COMPETICAO FOREIGN KEY(ID_COMPETICAO)
    REFERENCES Competicao(ID),
    CONSTRAINT FK_EQUIPE FOREIGN KEY(ID_EQUIPE)
    REFERENCES Equipe(ID),
    CONSTRAINT CK_PARTICIPA CHECK (
        COLOCACAO > 0 AND
        PONTUACAO >= 0
    )
);

CREATE TABLE Patrocinios (
    ID_EQUIPE INT,
    PATROCINIO TEXT,

    CONSTRAINT PK_PATROCINIOS PRIMARY KEY(ID_EQUIPE, PATROCINIO),
    CONSTRAINT FK_EQUIPE FOREIGN KEY(ID_EQUIPE)
    REFERENCES Equipe(ID)
);

CREATE TABLE Coordena (
    PROFESSOR CHAR(11),
    ID_EQUIPE INT,

    CONSTRAINT PK_COORDENA PRIMARY KEY(PROFESSOR, ID_EQUIPE),
    CONSTRAINT FK_PROFESSOR FOREIGN KEY(PROFESSOR)
    REFERENCES Professor(CPF),
    CONSTRAINT FK_EQUIPE FOREIGN KEY(ID_EQUIPE)
    REFERENCES Equipe(ID)
);